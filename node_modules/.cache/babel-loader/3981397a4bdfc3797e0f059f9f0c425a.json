{"ast":null,"code":"var _jsxFileName = \"/Users/victorsvetailo/Desktop/war13/webDevelopment13/myTraningWeb/toDoListOneDay/src/App.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { ToDoList } from './component/ToDoLIst/ToDoList';\nimport { v1 } from 'uuid';\n\nfunction App() {\n  console.log('Render component App');\n  const titleToDoList = 'What to learn?';\n  const [tasks, setTasks] = useState([{\n    id: v1(),\n    title: 'HTML&CSS',\n    isDone: true\n  }, {\n    id: v1(),\n    title: 'JS',\n    isDone: true\n  }, {\n    id: v1(),\n    title: 'ReactJS',\n    isDone: false\n  }, {\n    id: v1(),\n    title: 'Redux',\n    isDone: true\n  }]);\n\n  const filterTask = value => {\n    setFilter(value);\n  };\n\n  const removeTask = id => {\n    let removeFilterTask = tasks.filter(t => t.id !== id);\n    setTasks(removeFilterTask);\n  };\n\n  const addTask = titleNewTask => {\n    let newAddTask = {\n      id: v1(),\n      title: titleNewTask,\n      isDone: false\n    };\n    setTasks([newAddTask, ...tasks]);\n  };\n\n  const changeTaskStatus = (taskID, isDone) => {\n    let task = tasks.find(t => t.id === taskID);\n\n    if (task) {\n      task.isDone = isDone;\n    }\n\n    setTasks([...tasks]);\n  };\n\n  const toDoList = [{\n    id: v1(),\n    title: 'What to learn?',\n    filter: 'all'\n  }, {\n    id: v1(),\n    title: 'What to buy?',\n    filter: 'completed'\n  }];\n  const toDoListRend = toDoList.map(tl => {\n    let filterForToDoLIst = tasks;\n\n    if (tl.filter === 'active') {\n      filterForToDoLIst = tasks.filter(t => !t.isDone);\n    }\n\n    if (tl.filter === 'completed') {\n      filterForToDoLIst = tasks.filter(t => t.isDone);\n    }\n\n    return /*#__PURE__*/React.createElement(ToDoList, {\n      titleToDoList: tl.title,\n      tasks: filterForToDoLIst,\n      removeTask: removeTask,\n      filterTask: filterTask,\n      addTask: addTask,\n      changeTaskStatus: changeTaskStatus,\n      filter: tl.filter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, toDoListRend);\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","ToDoList","v1","App","console","log","titleToDoList","tasks","setTasks","id","title","isDone","filterTask","value","setFilter","removeTask","removeFilterTask","filter","t","addTask","titleNewTask","newAddTask","changeTaskStatus","taskID","task","find","toDoList","toDoListRend","map","tl","filterForToDoLIst"],"sources":["/Users/victorsvetailo/Desktop/war13/webDevelopment13/myTraningWeb/toDoListOneDay/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\n\r\n\r\nimport './App.css';\r\nimport {ArrayTasksType, ToDoList} from './component/ToDoLIst/ToDoList';\r\nimport {v1} from 'uuid';\r\n\r\n\r\nexport type FilterTasksValueType = 'all' | 'active' | 'completed'\r\ntype ToDoLIstType ={\r\n    id: string\r\n    title: string\r\n    filter: FilterTasksValueType\r\n}\r\n\r\n\r\nfunction App() {\r\n    console.log('Render component App')\r\n    const titleToDoList = 'What to learn?'\r\n    const [tasks, setTasks] = useState<Array<ArrayTasksType>>([\r\n        {id: v1(), title: 'HTML&CSS', isDone: true},\r\n        {id: v1(), title: 'JS', isDone: true},\r\n        {id: v1(), title: 'ReactJS', isDone: false},\r\n        {id: v1(), title: 'Redux', isDone: true},\r\n    ])\r\n\r\n\r\n\r\n    const filterTask = (value: FilterTasksValueType, ) => {\r\n        setFilter(value)\r\n    }\r\n    const removeTask = (id: string) => {\r\n        let removeFilterTask = tasks.filter(t => t.id !== id)\r\n        setTasks(removeFilterTask)\r\n    }\r\n    const addTask = (titleNewTask: string) => {\r\n        let newAddTask = {id: v1(), title: titleNewTask, isDone: false}\r\n        setTasks([newAddTask, ...tasks])\r\n    }\r\n    const changeTaskStatus = (taskID: string, isDone: boolean) => {\r\n      let task = tasks.find(t => t.id === taskID)\r\n        if (task){\r\n            task.isDone = isDone\r\n        }\r\n        setTasks([...tasks])\r\n    }\r\n\r\n    const toDoList: Array<ToDoLIstType>  = [\r\n        {id: v1(), title: 'What to learn?', filter: 'all'},\r\n        {id: v1(), title: 'What to buy?', filter: 'completed'},\r\n    ]\r\n\r\n    const toDoListRend = toDoList.map(tl => {\r\n\r\n        let filterForToDoLIst = tasks\r\n        if (tl.filter === 'active') {\r\n            filterForToDoLIst = tasks.filter(t => !t.isDone)\r\n        }\r\n        if (tl.filter === 'completed') {\r\n            filterForToDoLIst = tasks.filter(t => t.isDone)\r\n        }\r\n\r\n        return  <ToDoList titleToDoList={tl.title}\r\n                          tasks={filterForToDoLIst}\r\n                          removeTask={removeTask}\r\n                          filterTask={filterTask}\r\n                          addTask={addTask}\r\n                          changeTaskStatus={changeTaskStatus}\r\n                          filter={tl.filter}\r\n        />\r\n    })\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {toDoListRend}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}