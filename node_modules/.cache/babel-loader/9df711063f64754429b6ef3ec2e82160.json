{"ast":null,"code":"var _jsxFileName = \"/Users/victorsvetailo/Desktop/war13/webDevelopment13/myTraningWeb/toDoListOneDay/src/component/ToDoLIst/ToDoList.tsx\";\nimport React, { useState } from 'react';\nexport const ToDoList = props => {\n  const tasks = props.tasks.map(t => {\n    const removeTaskHandler = () => {\n      props.removeTask(t.id);\n    };\n\n    const onChangeCheckBoxHandler = () => props.changeStatus(t.id, t.isDone);\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: t.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: onChangeCheckBoxHandler,\n      checked: t.isDone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }), t.title, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: removeTaskHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"x\"));\n  });\n\n  const onClickFilterAllHandler = () => props.filterTask('all');\n\n  const onClickFilterActiveHandler = () => props.filterTask('active');\n\n  const onClickFilterCompletedHandler = () => props.filterTask('completed');\n\n  const [titleNewTask, setTitleNewTask] = useState('');\n\n  const onChangeTextHandler = e => {\n    setTitleNewTask(e.currentTarget.value);\n  };\n\n  const onClickAddTaskTitle = e => {\n    if (titleNewTask !== '') {\n      props.addTask(titleNewTask.trim());\n      setTitleNewTask('');\n    }\n  };\n\n  const onKeyPressAddTaskHandler = e => {\n    if (e.key === 'Enter' && e.ctrlKey) {\n      if (titleNewTask !== '') {\n        props.addTask(titleNewTask.trim());\n        setTitleNewTask('');\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, props.titleToDoList), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: titleNewTask,\n    onChange: onChangeTextHandler,\n    onKeyPress: onKeyPressAddTaskHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClickAddTaskTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, tasks), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClickFilterAllHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClickFilterActiveHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClickFilterCompletedHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Completed\")));\n};","map":{"version":3,"names":["React","useState","ToDoList","props","tasks","map","t","removeTaskHandler","removeTask","id","onChangeCheckBoxHandler","changeStatus","isDone","title","onClickFilterAllHandler","filterTask","onClickFilterActiveHandler","onClickFilterCompletedHandler","titleNewTask","setTitleNewTask","onChangeTextHandler","e","currentTarget","value","onClickAddTaskTitle","addTask","trim","onKeyPressAddTaskHandler","key","ctrlKey","titleToDoList"],"sources":["/Users/victorsvetailo/Desktop/war13/webDevelopment13/myTraningWeb/toDoListOneDay/src/component/ToDoLIst/ToDoList.tsx"],"sourcesContent":["import React, {MouseEvent, FC, ChangeEvent, KeyboardEvent, useState} from 'react';\nimport {FilterTasksValueType} from '../../App';\nimport {log} from 'util';\n\n\ntype PropsType = {\n    titleToDoList: string\n    tasks: Array<ArrayTasksType>\n    removeTask: (id: string) => void\n    filterTask: (value: FilterTasksValueType) => void\n    addTask: (titleNewTask: string) => void\n    changeStatus: (taskID: string, isDone: boolean) => void\n}\n\nexport type ArrayTasksType = {\n    id: string\n    title: string\n    isDone: boolean\n}\n\n\nexport const ToDoList: FC<PropsType> = (props) => {\n\n\n\n    const tasks = props.tasks.map(t => {\n        const removeTaskHandler = () => {\n            props.removeTask(t.id)\n        }\n        const onChangeCheckBoxHandler = () => props.changeStatus(t.id, t.isDone)\n        return (\n            <li key={t.id}>\n                <input type=\"checkbox\" onChange={onChangeCheckBoxHandler} checked={t.isDone}/>{t.title}\n                <button onClick={removeTaskHandler}>x</button>\n            </li>\n        )\n    })\n    const onClickFilterAllHandler = () => props.filterTask('all')\n    const onClickFilterActiveHandler = () => props.filterTask('active')\n    const onClickFilterCompletedHandler = () => props.filterTask('completed')\n\n    const [titleNewTask, setTitleNewTask] = useState ('')\n    const onChangeTextHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setTitleNewTask(e.currentTarget.value)\n    }\n    const onClickAddTaskTitle = (e: MouseEvent<HTMLButtonElement>) => {\n        if (titleNewTask !== ''){\n            props.addTask(titleNewTask.trim())\n            setTitleNewTask('')\n        }\n    }\n    const onKeyPressAddTaskHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter' && e.ctrlKey){\n            if (titleNewTask !== ''){\n                props.addTask(titleNewTask.trim())\n                setTitleNewTask('')\n            }\n        }\n    }\n\n\n    return (\n        <div>\n            <h3>{props.titleToDoList}</h3>\n            <div>\n                <input\n                    value={titleNewTask}\n                    onChange={onChangeTextHandler}\n                    onKeyPress={onKeyPressAddTaskHandler}\n                />\n                <button onClick={onClickAddTaskTitle}>+</button>\n            </div>\n            <ul>\n                {tasks}\n            </ul>\n            <div>\n                <button onClick={onClickFilterAllHandler}>All</button>\n                <button onClick={onClickFilterActiveHandler}>Active</button>\n                <button onClick={onClickFilterCompletedHandler}>Completed</button>\n            </div>\n        </div>\n    );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}